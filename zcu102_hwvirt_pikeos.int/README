=====================
 FRED for PikeOS 5.1
=====================

This PikeOS Integration Project, where PikeOS is configure to work with the FRED Framework. The configuration used here is mostly based on Deliverable 5.3, from the AMPERE project.

Restoring the PikeOS Project
==============================

Run 

```
$ cd zcu102_hwvirt_pikeos.int
$ /opt/pikeos-5.1/bin/pikeos-share-project import
$ ./configure -n
$ . ./ELINOS.sh
```

to restore the project once the repository is cloned.

Generating the Linux Image and Updating the SD-card
=====================================================

First, run `make boot` in zcu102_hwvirt_linux.app to compile the kernel and generate the linus image. 

Run `make install` to compile the kernel and generate the ElinOS image. This process takes about 10 to 15 minutes.

Updating the Device Tree Manually
===================================

Before saving the image into the SD-card we have to add the FPGA configuration into the device tree and also to replace the FPGA-manager driver. This is currently done manually but could be updated to apply a patch, for example. 

Add the following lines inside the device tree axi block related to slot0 and pr_decoupler0:

```
	axi {
		compatible = "simple-bus";
		u-boot,dm-pre-reloc;
		#address-cells = <0x2>;
		#size-cells = <0x2>;
		ranges;

		slot_p0_s0@a0000000 {
			interrupts = <0x00 0x59 0x04>;
			interrupt-parent = <0x01>;
			compatible = "generic-uio";
			reg = <0x00 0xa0000000 0x00 0x10000>;
		};

		pr_decoupler_p0_s0@a0010000 {
			compatible = "generic-uio";
			reg = <0x00 0xa0010000 0x00 0x10000>;
		};
```

To make things easier, there is a modified device tree in `system.dts`. The file `linux-modif.dtb` is a already compiled version of this device tree, such that it's just a matter of replacing the 
device tree generated by ELinOS. Be aware that if ElinOS configuration is changed just that it also changes its device tree, then one needs to make the manual device tree modification again. Checkout the  comment section of the `Makefile`, under rule `boot`, to generate the newer device tree. 

Updating the SD.card
=====================

Run `make burn` to update the SD-card. You might need to change the partition names according to the your sd-card.

Missing Features
=================

 - Linux Device tree overlays was not working. So it is currently using a fixed device tree to specify the FPGA layout (number of slots). This is not ideal because, for example, if more slots are added to the FPGA, then we need to manually add the device tree to correspond this change and rebuild the kernel image. With the use of device tree overlay, which is working in Petalinux, changing the FPGA layout can be incorporated in the Linux image in runtime, while running the image.
 - The shared memory regions, defined in the device tree, among fred-server, fred client app, and fpga-manager must be configured in PikeOS
 - It's possible that the interruptions issues when the IP finishes its tasks, defined in the device tree, should also be mapped in PikeOS.
 - Apply the kernel patches:
    - https://github.com/fred-framework/meta-retis/blob/main/recipes-kernel/linux/files/0001-Disable-runtime-frequency-scaling-in-dl-tasks.patch
    - https://github.com/fred-framework/meta-retis/blob/main/recipes-kernel/linux/files/0002-Set-rt-class-priority-higher-than-dl.patch


Updating the ElinOS configuration
==================================

Since there are still some work to be done to configure PikeOS for FRED, it will be necessary to update both Elinos System Project 
and PikeOS project. Run the following command to prepare the project to update the repository. 

```
$ cd zcu102_hwvirt_pikeos.int
$ /opt/pikeos-5.1/bin/pikeos-share-project export
```

Then repeat the procedure mentioned above to restore the project.

Diff PikeOS configuration
===========================

In the future, when migrating to newer PikeOS version, it will be useful to know all the configurations done manually in CODEO.
For this reason, run the command `make diffconfig` to highlight those differences compared to the default PikeOS config. Then,
it's is just a matter of finding each parameter in the newer CODEO/PikeOS.


 A. Amory
