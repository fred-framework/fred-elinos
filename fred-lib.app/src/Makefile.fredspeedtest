#==========================================================#
# Makefile for the Fred Client Library                     #
#==========================================================#
#
# Must accept following arguments:
# - all
# - install
# - clean
# - distclean

.PHONY: all build configure install clean distclean

#==========================================================#
#                      Configuration                       #
#==========================================================#

# Configuration options
BUILD_TYPE              ?= Release

# Global variables
DIR_INSTALL             := $(ELINOS_PROJECT)/app.rootfs/usr
DIR_SOURCE              := fredspeedtest
DIR_FRED_LIB            := $(shell realpath ./fred-linux-client-lib)
DIR_BUILD               := $(DIR_SOURCE)/build

INSTALLED_FILES         := \
	lib64/libfred.so \
	lib64/libfred.a \
	include/fred_lib.h \
	include/fredcpp.h \
	lib64/cmake/libfred/libfredTargets.cmake \
	lib64/cmake/libfred/libfredTargets-release.cmake \
	lib64/cmake/libfred/libfredConfig.cmake \
	lib64/cmake/libfred/libfredConfigVersion.cmake
	bin/fredspeedtest \

#==========================================================#
#                         Targets                          #
#==========================================================#

all: build

build: configure
	$(MAKE) -C $(DIR_BUILD)

configure:
	cmake -S $(DIR_SOURCE) -B $(DIR_BUILD) \
		-DCMAKE_BUILD_TYPE=$(BUILD_TYPE) \
		-DCMAKE_INSTALL_PREFIX=$(DIR_INSTALL) \
		-DCPM_libfred_SOURCE=$(DIR_FRED_LIB)

clean:
	rm -rf $(DIR_BUILD)

install: build
	$(MAKE) -C $(DIR_BUILD) install

distclean: clean
	@for f in $(INSTALLED_FILES); do echo "rm -f $(DIR_INSTALL)/$$f" ; rm -f $(DIR_INSTALL)/$$f ; done
